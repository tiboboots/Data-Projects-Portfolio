{
	"jobConfig": {
		"name": "ETLGLUEJOB",
		"description": "",
		"role": "arn:aws:iam::135808933643:role/service-role/AWSGlueServiceRole-crawler_role",
		"command": "glueetl",
		"version": "4.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "ETLGLUEJOB.py",
		"scriptLocation": "s3://aws-glue-assets-135808933643-eu-west-3/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2024-12-01T15:53:54.577Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-135808933643-eu-west-3/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-135808933643-eu-west-3/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null,
		"pythonPath": null
	},
	"dag": {
		"node-1733067554243": {
			"nodeId": "node-1733067554243",
			"dataPreview": false,
			"previewAmount": 0,
			"inputs": [
				"node-1733064367299"
			],
			"name": "Amazon S3",
			"generatedNodeName": "AmazonS3_node1733067554243",
			"classification": "DataSink",
			"type": "S3",
			"streamingBatchInterval": 100,
			"format": "csv",
			"compression": "snappy",
			"path": "s3://easybuckets/output_folder_ETL/",
			"partitionKeys": [],
			"schemaChangePolicy": {
				"enableUpdateCatalog": true,
				"updateBehavior": "LOG",
				"database": "healthcarebase",
				"table": "transformed_healthcare"
			},
			"updateCatalogOptions": "partitions",
			"autoDataQuality": {
				"isEnabled": false,
				"evaluationContext": null
			},
			"calculatedType": "",
			"codeGenVersion": 2
		},
		"node-1733064367299": {
			"nodeId": "node-1733064367299",
			"dataPreview": false,
			"previewAmount": 0,
			"inputs": [
				"node-1733056369757"
			],
			"name": "SQL Query",
			"generatedNodeName": "SQLQuery_node1733064367299",
			"classification": "Transform",
			"type": "SqlCode",
			"sqlAliases": [
				{
					"from": "node-1733056369757",
					"alias": "myDataSource"
				}
			],
			"outputSchemas": [
				[
					{
						"key": "patient id",
						"fullPath": [
							"patient id"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "first_name",
						"fullPath": [
							"first_name"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "last_name",
						"fullPath": [
							"last_name"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "age",
						"fullPath": [
							"age"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "diagnosis",
						"fullPath": [
							"diagnosis"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "treatment",
						"fullPath": [
							"treatment"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					}
				]
			],
			"parentsValid": true,
			"calculatedType": "",
			"sqlQuery": "SELECT `patient id`,\nSUBSTRING_INDEX(name, \" \", 1) AS first_name,\nSUBSTRING_INDEX(name, \" \", -1) AS last_name,\nage,\ndiagnosis,\ntreatment\nFROM myDataSource\nWHERE age > 40\n",
			"codeGenVersion": 2
		},
		"node-1733056369757": {
			"nodeId": "node-1733056369757",
			"dataPreview": false,
			"previewAmount": 0,
			"inputs": [],
			"name": "Amazon S3",
			"generatedNodeName": "AmazonS3_node1733056369757",
			"classification": "DataSource",
			"type": "S3",
			"isCatalog": false,
			"format": "csv",
			"paths": [
				"s3://easybuckets/healthcaredata/"
			],
			"compressionType": null,
			"exclusions": [],
			"groupFiles": null,
			"groupSize": null,
			"recurse": true,
			"maxBand": null,
			"maxFilesInBand": null,
			"additionalOptions": {
				"boundedSize": null,
				"boundedFiles": null,
				"enableSamplePath": false,
				"samplePath": "s3://easybuckets/healthcaredata/RealHealthcareData1.csv",
				"boundedOption": null
			},
			"separator": ",",
			"escaper": "",
			"quoteChar": "\"",
			"multiline": null,
			"withHeader": true,
			"writeHeader": null,
			"skipFirst": null,
			"optimizePerformance": false,
			"outputSchemas": [
				[
					{
						"key": "patient id",
						"fullPath": [
							"patient id"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "name",
						"fullPath": [
							"name"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "age",
						"fullPath": [
							"age"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "diagnosis",
						"fullPath": [
							"diagnosis"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "treatment",
						"fullPath": [
							"treatment"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					},
					{
						"key": "files",
						"fullPath": [
							"files"
						],
						"type": "string",
						"glueStudioType": null,
						"children": null
					}
				]
			],
			"calculatedType": "",
			"codeGenVersion": 2
		}
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom awsglue import DynamicFrame\n\ndef sparkSqlQuery(glueContext, query, mapping, transformation_ctx) -> DynamicFrame:\n    for alias, frame in mapping.items():\n        frame.toDF().createOrReplaceTempView(alias)\n    result = spark.sql(query)\n    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\n# Script generated for node Amazon S3\nAmazonS3_node1733056369757 = glueContext.create_dynamic_frame.from_options(format_options={\"quoteChar\": \"\\\"\", \"withHeader\": True, \"separator\": \",\", \"optimizePerformance\": False}, connection_type=\"s3\", format=\"csv\", connection_options={\"paths\": [\"s3://easybuckets/healthcaredata/\"], \"recurse\": True}, transformation_ctx=\"AmazonS3_node1733056369757\")\n\n# Script generated for node SQL Query\nSqlQuery44 = '''\nSELECT `patient id`,\nSUBSTRING_INDEX(name, \" \", 1) AS first_name,\nSUBSTRING_INDEX(name, \" \", -1) AS last_name,\nage,\ndiagnosis,\ntreatment\nFROM myDataSource\nWHERE age > 40\n\n'''\nSQLQuery_node1733064367299 = sparkSqlQuery(glueContext, query = SqlQuery44, mapping = {\"myDataSource\":AmazonS3_node1733056369757}, transformation_ctx = \"SQLQuery_node1733064367299\")\n\n# Creating Dataframe for SQL Query output above\ndataframe = SQLQuery_node1733064367299.toDF()\n\ndataframe = dataframe.repartition(1)\n\n# Writing Dataframe data to S3 bucket\ndataframe.write\\\n    .format(\"csv\")\\\n    .option(\"quote\", None)\\\n    .option(\"sep\", \",\")\\\n    .option(\"header\", \"True\")\\\n    .mode(\"overwrite\")\\\n    .save(\"s3://easybuckets/output_folder_ETL/\")\n                \njob.commit()"
}